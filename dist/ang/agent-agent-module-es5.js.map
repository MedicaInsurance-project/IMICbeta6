{"version":3,"sources":["src/app/agent/agent.component.html","src/app/agent/appliers/appliers.component.html","src/app/agent/customer-list/customer-list.component.html","src/app/agent/customer-registration/customer-registration.component.html","src/app/agent/dashboard/dashboard.component.html","src/app/agent/footer/footer.component.html","src/app/agent/header/header.component.html","src/app/agent/profile/profile.component.html","src/app/agent/side-nav/side-nav.component.html","src/app/agent/view-user/view-user.component.html","src/app/agent/agent-routing.module.ts","src/app/agent/agent.component.css","src/app/agent/agent.component.ts","src/app/agent/agent.guard.ts","src/app/agent/agent.module.ts","src/app/agent/agentservice.service.ts","src/app/agent/appliers/appliers.component.css","src/app/agent/appliers/appliers.component.ts","src/app/agent/customer-list/customer-list.component.css","src/app/agent/customer-list/customer-list.component.ts","src/app/agent/customer-registration/customer-registration.component.css","src/app/agent/customer-registration/customer-registration.component.ts","src/app/agent/dashboard/dashboard.component.css","src/app/agent/dashboard/dashboard.component.ts","src/app/agent/footer/footer.component.css","src/app/agent/footer/footer.component.ts","src/app/agent/header/header.component.css","src/app/agent/header/header.component.ts","src/app/agent/profile/profile.component.css","src/app/agent/profile/profile.component.ts","src/app/agent/side-nav/admin-nav.service.ts","src/app/agent/side-nav/side-nav.component.css","src/app/agent/side-nav/side-nav.component.ts","src/app/agent/view-user/view-user.component.css","src/app/agent/view-user/view-user.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<app-header></app-header>\\r\\n<app-side-nav></app-side-nav>\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>\"","export default \"<!-- <div class=\\\"container-fluid\\\" id=\\\"tb\\\">\\r\\n\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead class=\\\"thead-dark\\\">\\r\\n            <tr>\\r\\n                <!-- <th scope=\\\"col\\\">s.no</th>\\r\\n\\r\\n                <th scope=\\\"col\\\">Title</th>\\r\\n\\r\\n                <th scope=\\\"col\\\">First-name</th>\\r\\n                <th scope=\\\"col\\\">Last-name</th>\\r\\n                <th scope=\\\"col\\\">Phone</th>\\r\\n                <th scope=\\\"col\\\">Email</th>\\r\\n                <!-- <th>Actions</th> -->\\r\\n<!-- </tr>\\r\\n</thead>\\r\\n<tbody *ngFor=\\\"let data of myData; let i=index\\\">\\r\\n    <tr>  -->\\r\\n<!-- <td>{{i+1 }}</td>\\r\\n\\r\\n                <td>{{data.fullname}}</td>\\r\\n                <td>{{data.email}}</td>\\r\\n                <td>{{data.contact}}</td>\\r\\n                <td>{{data.message}}</td>\\r\\n                <td>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"delete(data._id)\\\">Delete</button> &nbsp;\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><a  class=\\\"text-white\\\" routerLink='viewUser/{{data._id}}'>View</a></button>\\r\\n                </td> -->\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        Featured\\r\\n                    </div>\\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                        <li class=\\\"list-group-item\\\">{{data.fullname}}</li>\\r\\n                        <li class=\\\"list-group-item\\\">{{data.email}}</li>\\r\\n                        <li class=\\\"list-group-item\\\">{{data.contact}}</li>\\r\\n                        <li class=\\\"list-group-item\\\">{{data.message}}</li>\\r\\n                        <button class=\\\"btn btn-secondary\\\">Delete</button>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </tr>\\r\\n            <br>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"card-deck w-75 p-3 mx-auto\\\" style=\\\"width: 200px;\\\" *ngFor=\\\"let data of myData; let i=index\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n                <li class=\\\"list-group-item\\\">Name: {{data.fullname}}</li>\\r\\n                <li class=\\\"list-group-item\\\">Email: {{data.email}}</li>\\r\\n                <li class=\\\"list-group-item\\\">Phone-no: {{data.contact}}</li>\\r\\n                <li class=\\\"list-group-item\\\">Message: {{data.message}}</li>\\r\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"deleteApplier(data._id)\\\">Delete</button>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","export default \"<div class=\\\"container-fluid\\\" id=\\\"tb\\\">\\r\\n\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead class=\\\"thead-dark\\\">\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">s.no</th>\\r\\n\\r\\n                <th scope=\\\"col\\\">Title</th>\\r\\n\\r\\n                <th scope=\\\"col\\\">First-name</th>\\r\\n                <th scope=\\\"col\\\">Last-name</th>\\r\\n                <th scope=\\\"col\\\">Phone</th>\\r\\n                <th scope=\\\"col\\\">Email</th>\\r\\n                <th>Actions</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let data of myData ;let i=index\\\">\\r\\n            <tr>\\r\\n                <td>{{i+1 }}</td>\\r\\n\\r\\n                <td>{{data.title}}</td>\\r\\n                <td>{{data.firstname}}</td>\\r\\n                <td>{{data.lastname}}</td>\\r\\n                <td>{{data.phone}}</td>\\r\\n                <td>{{data.email}}</td>\\r\\n                <td>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"delete(data._id)\\\">Delete</button> &nbsp;\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><a  class=\\\"text-white\\\" routerLink='viewUser/{{data._id}}'>View</a></button>\\r\\n                </td>\\r\\n            </tr>\\r\\n\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","export default \"<!-- main app container -->\\r\\n<div class=\\\"container-fluid\\\" id=\\\"form\\\">\\r\\n    <div class=\\\"card m-3\\\">\\r\\n        <h3 class=\\\"card-header font\\\">Customer Registration</h3>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <h5>Personal Details</h5>\\r\\n                <hr>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label>Title</label>\\r\\n                        <select formControlName=\\\"title\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\">\\r\\n                            <option value=\\\"\\\"></option>\\r\\n                            <option value=\\\"Mr\\\">Mr</option>\\r\\n                            <option value=\\\"Mrs\\\">Mrs</option>\\r\\n                            <option value=\\\"Miss\\\">Miss</option>\\r\\n                            <option value=\\\"Ms\\\">Ms</option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && f.title?.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.title?.errors.required\\\">Title is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-5\\\">\\r\\n                        <label>First Name</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"firstname\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstname.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.firstname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.firstname.errors.required\\\">First Name is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-5\\\">\\r\\n                        <label>Last Name</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastname.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.lastname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.lastname.errors.required\\\">Last Name is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Email</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\r\\n                    <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\r\\n                        <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-2\\\">\\r\\n                        <label>Gender</label>\\r\\n                        <select formControlName=\\\"gender\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.gender.errors }\\\">\\r\\n                            <option value=\\\"\\\" disabled selected>Select Gender</option>\\r\\n                            <option value=\\\"male\\\">Male</option>\\r\\n                            <option value=\\\"female\\\">Female</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-5\\\">\\r\\n                        <label>Phone-no</label>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.phone.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.phone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.phone.errors.required\\\">phone-no is required</div>\\r\\n                            <div *ngIf=\\\"f.phone.errors.min\\\">phone-no must be a valid </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-4\\\">\\r\\n                        <label for=\\\"birthdate\\\">Birthdate</label>\\r\\n                        <input [max]=\\\"maxDate\\\" (change)=\\\"dateChange($event.target.value)\\\" type=\\\"date\\\" formControlName=\\\"birthdate\\\" class=\\\"form-control\\\">\\r\\n                        <!-- [ngClass]=\\\"{ 'is-invalid': submitted && f.birthdate.errors }\\\" -->\\r\\n                        <!-- <div *ngIf=\\\"f.birthdate.errors.required\\\"></div> -->\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div formGroupName=\\\"location\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <hr>\\r\\n                        <h5>Enter your address</h5>\\r\\n                        <hr>\\r\\n                        <label>Address</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.address.errors.required\\\">address is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <label>PIN Code</label>\\r\\n                            <input type=\\\"number\\\" formControlName=\\\"pin\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.pin.errors }\\\">\\r\\n                            <div *ngIf=\\\"submitted && f.pin.errors\\\" class=\\\"invalid-feedback\\\"></div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <label>City</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.city.errors }\\\">\\r\\n                            <div *ngIf=\\\"submitted && f.city.errors\\\" class=\\\"invalid-feedback\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <label>State</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.state.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && f.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <label>Country</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"country\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.country.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && f.country.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <hr width=\\\"100%\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-5\\\">\\r\\n                        <label>Adhaar-no</label>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"adhar\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.adhar.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.adhar.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.adhar.errors.required\\\">Adhar-no is required</div>\\r\\n                            <div *ngIf=\\\"f.adhar.errors.minlength\\\">Adhar-no must be a valid </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-5\\\">\\r\\n                        <label>PAN Card</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"pan\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.pan.errors }\\\" />\\r\\n                        <div *ngIf=\\\"submitted && f.pan.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.pan.errors.required\\\">PAN Card is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div formGroupName=\\\"policy\\\">\\r\\n                    <hr>\\r\\n                    <h5>Policy Details</h5>\\r\\n                    <hr>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <label>Policy Name</label>\\r\\n                            <select formControlName=\\\"policyName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.policyName.errors }\\\">\\r\\n                        <option value=\\\"\\\"></option>\\r\\n                        <option value=\\\"policy1\\\">Policy 1</option>\\r\\n                        <option value=\\\"policy2\\\">Policy 2</option>\\r\\n                        <option value=\\\"policy3\\\">Policy 3</option>\\r\\n                        <option value=\\\"policy4\\\">Policy 4</option>\\r\\n                    </select>\\r\\n                            <div *ngIf=\\\"submitted && f.policyName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.policyName?.errors.required\\\">Policy Name is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <label>Policy Amount</label>\\r\\n                            <select formControlName=\\\"policyAmount\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.policyAmount.errors }\\\">\\r\\n                        <option value=\\\"\\\"></option>\\r\\n                        <option value=2,00,000>2 Lakh</option>\\r\\n                        <option value=5,00,000>5 Lakh</option>\\r\\n                        <option value=10,00,000>10 Lakh</option>\\r\\n                    </select>\\r\\n                            <div *ngIf=\\\"submitted && f.policyAmount.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.policyAmount?.errors.required\\\">Policy Amount is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <label>Premium</label>\\r\\n                            <select formControlName=\\\"premium\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.premium.errors }\\\">\\r\\n                        <option value=\\\"\\\"></option>\\r\\n                        <option value=\\\"2,000\\\">2,000</option>\\r\\n                        <option value=\\\"2,500\\\">2,500</option>\\r\\n                        <option value=\\\"5,000\\\">5,000</option>\\r\\n                    </select>\\r\\n                            <div *ngIf=\\\"submitted && f.premium.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.premium?.errors.required\\\">Premium is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div formGroupName=\\\"nominie\\\">\\r\\n                    <hr>\\r\\n                    <h5>Nominie</h5>\\r\\n                    <hr>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <input formControlName=\\\"nominieName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"enter name\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <input formControlName=\\\"nominieRealtion\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"enter relation\\\">\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-3\\\">\\r\\n                            <input formControlName=\\\"nominieNumber\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"enter number\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"form-group\\\">\\r\\n                    <label>Nominie:</label> -->\\r\\n                <!-- <button class=\\\"btn btn-secondary btn-sm m-2\\\" type=\\\"button\\\" (click)=\\\"addAlternateEmail()\\\">Add Nominie</button> -->\\r\\n                <!-- <div class=\\\"input-group\\\">\\r\\n                        <input formControlName=\\\"nominie\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"enter name\\\">\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <input formControlName=\\\"relation\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"enter relationship\\\">\\r\\n                    </div> -->\\r\\n                <!-- <div  class=\\\"input-group\\\" formArrayName=\\\"alternateEmails\\\" *ngFor=\\\"let email of alternateEmails.controls; let i=index\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control my-1\\\" [formControlName]=\\\"i\\\"  placeholder=\\\"enter name\\\">\\r\\n              <span class=\\\"input-group-addon\\\">-</span>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control my-1\\\" [formControlName]=\\\"i\\\" placeholder=\\\"enter relationship\\\">\\r\\n            </div> -->\\r\\n                <!-- <div class=\\\"form-group form-check\\\">\\r\\n                <input type=\\\"checkbox\\\" formControlName=\\\"acceptTerms\\\" id=\\\"acceptTerms\\\" class=\\\"form-check-input\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.acceptTerms.errors }\\\" />\\r\\n                <label for=\\\"acceptTerms\\\" class=\\\"form-check-label\\\">Accept Terms & Conditions</label>\\r\\n                <div *ngIf=\\\"submitted && f.acceptTerms.errors\\\" class=\\\"invalid-feedback\\\">Accept Ts & Cs is required</div>\\r\\n            </div> -->\\r\\n\\r\\n                <div class=\\\"text-center\\\">\\r\\n                    <button class=\\\"btn btn-primary mr-1\\\">Register</button>\\r\\n                    <button class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\">Cancel</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\"","export default \"<h1>\\r\\n    hey !! {{first_name}}</h1>\"","export default \"\\r\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg   rounded\\\">\\r\\n    <a>\\r\\n        <img src=\\\"assets/img/imiclogo.png\\\">&nbsp;Indian Medical Insurance</a>\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\r\\n        <li class=\\\"nav-item dropdown\\\">\\r\\n\\r\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"submitLogout()\\\">logout</button>\\r\\n        </li>\\r\\n    </ul>\\r\\n</nav>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 \\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <h4>Your Profile</h4>\\r\\n                            <hr>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form [formGroup]=\\\"\\\">\\r\\n                                <div class=\\\"form-group row\\\">\\r\\n                                    <label for=\\\"username\\\" class=\\\"col-4 col-form-label\\\">firstname </label>\\r\\n                                    <div class=\\\"col-8\\\">\\r\\n                                        <input id=\\\"username\\\" class=\\\"form-control here\\\" value={{first_name}} type=\\\"text\\\" readonly>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group row\\\">\\r\\n                                    <label for=\\\"name\\\" class=\\\"col-4 col-form-label\\\">First Name</label>\\r\\n                                    <div class=\\\"col-8\\\">\\r\\n                                        <input class=\\\"form-control here\\\" value={{first_name}} type=\\\"text\\\" readonly>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group row\\\">\\r\\n                                    <label for=\\\"lastname\\\" class=\\\"col-4 col-form-label\\\">Last Name</label>\\r\\n                                    <div class=\\\"col-8\\\">\\r\\n                                        <input class=\\\"form-control here\\\" value={{last_name}} type=\\\"text\\\" readonly>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group row\\\">\\r\\n                                    <label for=\\\"email\\\" class=\\\"col-4 col-form-label\\\">Email</label>\\r\\n                                    <div class=\\\"col-8\\\">\\r\\n                                        <input class=\\\"form-control here\\\" value={{email}} type=\\\"text\\\" readonly>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group row\\\">\\r\\n                                    <label for=\\\"website\\\" class=\\\"col-4 col-form-label\\\">Phone no</label>\\r\\n                                    <div class=\\\"col-8\\\">\\r\\n                                        <input class=\\\"form-control here\\\" value={{phone}} type=\\\"text\\\" readonly>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group row\\\">\\r\\n                                    <div class=\\\"offset-4 col-8\\\">\\r\\n                                        <button name=\\\"submit\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update My Profile</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"sidenav\\\" [ngStyle]=\\\"{'width.px': isOpen?'250':'0'}\\\">\\r\\n    <a href=\\\" javascript:void(0) \\\" class=\\\"closebtn \\\" (click)=\\\"closeNav() \\\">&times;</a>\\r\\n    <br>\\r\\n    <hr>\\r\\n    <div id=\\\"abc \\\">\\r\\n\\r\\n\\r\\n        <a routerLink=\\\"/home\\\" (click)='closeNav()'>Home</a><br>\\r\\n        <hr>\\r\\n        <a routerLink=\\\"/agent/profile\\\" (click)='closeNav()'>Profile</a><br></div>\\r\\n    <hr>\\r\\n    <a routerLink=\\\"/agent/customer-list\\\" (click)='closeNav()'>Customer-list</a><br>\\r\\n    <hr>\\r\\n    <a routerLink=\\\"/agent/customer-registration\\\" (click)='closeNav()'>Add-customer</a><br>\\r\\n    <hr>\\r\\n\\r\\n    <a routerLink=\\\"/agent/appliers\\\" (click)='closeNav()'>Appliers</a><br>\\r\\n    <hr>\\r\\n</div>\\r\\n\\r\\n\\r\\n<span style=\\\"font-size:30px;cursor:pointer \\\" (click)=\\\"openNav() \\\">&#9776; </span>\"","export default \"<div class=\\\"mx-auto\\\" style=\\\"width: 670px;\\\">\\r\\n    <div class=\\\"card d-flex h-100\\\" style=\\\"width: 47rem; height: 12rem;\\\">\\r\\n        <h5 class=\\\"card-header\\\">Add-Details</h5>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                        <label>Title</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.title}} readonly/>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-5\\\">\\r\\n                        <label>First Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.firstname}} readonly/>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-5\\\">\\r\\n                        <label>Last Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.lastname}} readonly/>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Email</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.email}} readonly/>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Phone-no</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.phone}} readonly/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Address</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.address}} readonly/>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Adhar-no</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.adhar}} readonly/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Policy</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.policy}} readonly/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Nominie:</label>\\r\\n                        <!-- <button class=\\\"btn btn-secondary btn-sm m-2\\\" type=\\\"button\\\" (click)=\\\"addAlternateEmail()\\\">Add Nominie</button> -->\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.nominie}} readonly>\\r\\n                            <span class=\\\"input-group-addon\\\">-</span>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" value={{myData.relation}} readonly>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"backToDash()\\\">Done</button>\\r\\n                    <!-- <button class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\">Cancel</button> -->\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { CustomerRegistrationComponent } from './customer-registration/customer-registration.component';\r\nimport { AgentComponent } from './agent.component';\r\nimport { ViewUserComponent } from './view-user/view-user.component';\r\nimport { AgentGuard } from './agent.guard';\r\nimport { AppliersComponent } from './appliers/appliers.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '', component: AgentComponent,\r\n    children: [\r\n      // {\r\n      // path : '' , redirectTo: 'dashboard' , pathMatch : 'full'\r\n      // },\r\n      { path: 'dashboard' , component: DashboardComponent, canActivate: [AgentGuard] },\r\n      { path: 'profile' , component: ProfileComponent, canActivate: [AgentGuard] },\r\n      { path: 'customer-list' , component: CustomerListComponent, canActivate: [AgentGuard]  },\r\n      { path: 'customer-registration' , component: CustomerRegistrationComponent, canActivate: [AgentGuard]  },\r\n      { path: 'customer-list/viewUser/:id' , component: ViewUserComponent, canActivate: [AgentGuard]  },\r\n      { path: 'appliers' , component: AppliersComponent, canActivate: [AgentGuard]  }\r\n\r\n    ]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AgentRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L2FnZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-agent',\r\n  templateUrl: './agent.component.html',\r\n  styleUrls: ['./agent.component.css']\r\n})\r\nexport class AgentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { Observable, from } from 'rxjs';\r\nimport { AuthService } from '../home/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentGuard implements CanActivate {\r\n \r\n  constructor( private _authService: AuthService, private router : Router){\r\n\r\n  }\r\n\r\n  canActivate(): boolean{\r\n    if(this._authService.agentLoggedIn()){\r\n      return true;\r\n    } else{\r\n      this.router.navigate(['home/agent-login']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AgentRoutingModule } from './agent-routing.module';\r\nimport { AgentComponent } from './agent.component';\r\nimport{CustomerListComponent} from './customer-list/customer-list.component';\r\nimport{CustomerRegistrationComponent} from './customer-registration/customer-registration.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport{ProfileComponent} from './profile/profile.component';\r\nimport{SideNavComponent} from './side-nav/side-nav.component';\r\nimport { fromEventPattern } from 'rxjs';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ViewUserComponent } from './view-user/view-user.component';\r\nimport { AppliersComponent } from './appliers/appliers.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AgentComponent,\r\n    CustomerListComponent,\r\n    CustomerRegistrationComponent,\r\n    DashboardComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    ProfileComponent,\r\n    SideNavComponent,\r\n    ViewUserComponent,\r\n    AppliersComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AgentRoutingModule\r\n  ]\r\n})\r\nexport class AgentModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { register } from './customer-registration/register';\r\n// import {Observable} from 'rxjs/Rx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentserviceService {\r\n  // tslint:disable-next-line:variable-name\r\n  _url = 'http://localhost:8080/users/createNew';\r\n\r\n  _urlgetall = 'http://localhost:8080/users'\r\n\r\n_urlDeleteRow = ' http://localhost:8080/users/delete'\r\n\r\n_urlView = 'http://localhost:8080/users/show'\r\n\r\n_urlcontactus = 'http://localhost:8080/contactus/'\r\n\r\n _urlDeleteApplier = 'http://localhost:8080/contactus/delete'\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registeration(reg: register) {\r\n    return this.http.post<any>(this._url, reg);\r\n  }\r\n\r\n  get_Users() {\r\n    return this.http.get(this._urlgetall);\r\n  }\r\n\r\n\r\n  delete_row(_id : string){\r\n    return this.http.delete(this._urlDeleteRow + `/${_id}`);\r\n  }\r\n\r\n  view_User(_id : string){\r\n\r\n    return this.http.get(this._urlView + `/${_id}`);\r\n    \r\n    }\r\n\r\n    get_Contact(){\r\n      return this.http.get(this._urlcontactus);\r\n    }\r\n\r\n\r\n    delete_applier(_id : string){\r\n      return this.http.delete(this._urlDeleteApplier + `/${_id}`);\r\n\r\n    }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L2FwcGxpZXJzL2FwcGxpZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport{AgentserviceService} from '../agentservice.service'\r\n\r\n@Component({\r\n  selector: 'app-appliers',\r\n  templateUrl: './appliers.component.html',\r\n  styleUrls: ['./appliers.component.css']\r\n})\r\nexport class AppliersComponent implements OnInit {\r\nmyData: any = {};\r\n  constructor(private _agentService: AgentserviceService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this._agentService.get_Contact()\r\n    .subscribe(\r\n      \r\n      res => {this.myData = res\r\n      console.log(res)},\r\n      error => console.error(error)\r\n        );\r\n  \r\n  }\r\n\r\n  refreshUsersList() {\r\n    this._agentService.get_Contact().subscribe((res) => {\r\n      this.myData = res;\r\n\r\n    });\r\n  }\r\n\r\n  deleteApplier(_id: string) {\r\n    console.log(_id);\r\n    this._agentService.delete_applier(_id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(_id)\r\n          Array.prototype.slice.call(data, 1);\r\n          this.refreshUsersList();\r\n        },\r\n        error => console.error(\"errorbv,jv\" , error)\r\n      );\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L2N1c3RvbWVyLWxpc3QvY3VzdG9tZXItbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AgentserviceService } from '../agentservice.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-list',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.css']\r\n})\r\nexport class CustomerListComponent implements OnInit {\r\n  myData: {};\r\n  constructor(private _agentService: AgentserviceService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this._agentService.get_Users()\r\n      .subscribe(\r\n        res => this.myData = res,\r\n        error => console.error(error)\r\n      );\r\n  }\r\n\r\n  refreshUsersList() {\r\n    this._agentService.get_Users().subscribe((res) => {\r\n      this.myData = res;\r\n\r\n    }\r\n\r\n\r\n    )\r\n\r\n  }\r\n\r\n  delete(_id: string) {\r\n    this._agentService.delete_row(_id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(_id)\r\n          Array.prototype.slice.call(data, 1);\r\n          this.refreshUsersList();\r\n        },\r\n        error => console.error(error)\r\n      );\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L2N1c3RvbWVyLXJlZ2lzdHJhdGlvbi9jdXN0b21lci1yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormArray, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AgentserviceService } from '../agentservice.service';\r\n@Component({\r\nselector: 'app-customer-registration',\r\ntemplateUrl: './customer-registration.component.html',\r\nstyleUrls: ['./customer-registration.component.css']\r\n})\r\nexport class CustomerRegistrationComponent implements OnInit {\r\nregisterForm: FormGroup;\r\nsubmitted = false;\r\ndate = new Date();\r\n\r\nmaxDate = (new Date().getFullYear()).toString() + \"-0\" + (new Date().getMonth() + 1).toString() + \"-\" + (new Date().getDate()).toString();\r\n\r\n\r\n\r\nconstructor(private fb: FormBuilder,\r\n// tslint:disable-next-line:variable-name\r\nprivate routes: Router,\r\n// tslint:disable-next-line:variable-name\r\nprivate _agentService: AgentserviceService) { }\r\n\r\nngOnInit() {\r\nthis.registerForm = this.fb.group({\r\ntitle: ['', Validators.required],\r\nfirstname: ['', Validators.required],\r\nlastname: ['', Validators.required],\r\nemail: ['', [Validators.required, Validators.email]],\r\nphone: ['', [Validators.required, Validators.min(10)]],\r\nlocation: this.fb.group({\r\n  address: ['', Validators.required],\r\n  pin: ['',Validators.required],\r\n  country: ['',Validators.required],\r\n  state: ['',Validators.required],\r\n  city: ['',Validators.required],\r\n}),\r\npolicy: this.fb.group({\r\n  policyName: ['', Validators.required],\r\n  policyAmount: ['', Validators.required],\r\n  premium: ['', Validators.required]\r\n}),\r\ngender: ['',Validators.required],\r\npan: ['',Validators.required],\r\nadhar: ['', [Validators.required, Validators.min(12)]],\r\nbirthdate:['' ],\r\nnominie: this.fb.group({\r\n  nominieName: ['', Validators.required],\r\n  nominieRealtion: ['',Validators.required],\r\n  nominieNumber: ['',Validators.required]\r\n}),\r\n\r\n// alternateEmails: this.fb.array([]),\r\n// acceptTerms: [false, Validators.requiredTrue]\r\n}, {\r\n\r\n\r\n});\r\n// tslint:disable-next-line:align\r\n\r\n\r\n\r\n\r\n}\r\nget f() { return this.registerForm.controls; }\r\n\r\nonSubmit() {\r\n console.log(JSON.stringify(this.registerForm.value));\r\nthis.submitted = true;\r\n// stop here if form is invalid\r\nif (this.registerForm.invalid) {\r\nreturn;\r\n}// display form values on success\r\nalert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value, null, 4));\r\nthis._agentService.registeration(this.registerForm.value)\r\n.subscribe(\r\ndata =>{ console.log(this.registerForm.value);\r\nthis.submitted = false;\r\nif(this.submitted == false)\r\nthis.registerForm.reset();\r\n},\r\nerror => console.error(error)\r\n);\r\n\r\n\r\n\r\n}\r\n\r\n\r\nonReset() {\r\nthis.submitted = false;\r\nthis.registerForm.reset();\r\n}\r\n\r\n\r\ndateChange(event) {\r\nconsole.log(event);\r\n\r\n\r\n\r\n\r\n}\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/home/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AgentserviceService } from '../agentservice.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  messages: any[] = [];\r\n  subscription: Subscription;\r\n  myData ={ }\r\n  first_name;\r\n\r\n  constructor( private routes: Router, private _agentService: AgentserviceService, private dataService: DataService) {\r\n\r\n    this.subscription = this.dataService.getMessage().subscribe(message => {\r\n      if (message) {\r\n      this.messages.push(message);\r\n      console.log(message);\r\n      console.log(\"Message\",message.text.email);\r\n      this.first_name = message.text.first_name;\r\n      console.log(this.first_name);\r\n\r\n      } else {\r\n      // clear messages when empty message received\r\n      this.messages = [];\r\n      }\r\n      });\r\n\r\n   }\r\n\r\n\r\n\r\n  \r\n  ngOnInit() {\r\n  }\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n  }\r\n \r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"/* Stackoverflow preview fix, please ignore */\\r\\n\\r\\n.navbar {\\r\\n    background-color: whitesmoke;\\r\\n}\\r\\n\\r\\n.nav_txt {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.navbar-nav {\\r\\n    flex-direction: row;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n    padding-right: .5rem !important;\\r\\n    padding-left: .5rem !important;\\r\\n}\\r\\n\\r\\n/* Fixes dropdown menus placed on the right side */\\r\\n\\r\\n.ml-auto .dropdown-menu {\\r\\n    left: auto !important;\\r\\n    right: 0px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvYWdlbnQvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZDQUE2Qzs7QUFFN0M7SUFDSSw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksK0JBQStCO0lBQy9CLDhCQUE4QjtBQUNsQzs7QUFHQSxrREFBa0Q7O0FBRWxEO0lBQ0kscUJBQXFCO0lBQ3JCLFVBQVU7QUFDZCIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFN0YWNrb3ZlcmZsb3cgcHJldmlldyBmaXgsIHBsZWFzZSBpZ25vcmUgKi9cclxuXHJcbi5uYXZiYXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcclxufVxyXG5cclxuLm5hdl90eHQge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4ubmF2YmFyLW5hdiB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG59XHJcblxyXG4ubmF2LWxpbmsge1xyXG4gICAgcGFkZGluZy1yaWdodDogLjVyZW0gIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmctbGVmdDogLjVyZW0gIWltcG9ydGFudDtcclxufVxyXG5cclxuXHJcbi8qIEZpeGVzIGRyb3Bkb3duIG1lbnVzIHBsYWNlZCBvbiB0aGUgcmlnaHQgc2lkZSAqL1xyXG5cclxuLm1sLWF1dG8gLmRyb3Bkb3duLW1lbnUge1xyXG4gICAgbGVmdDogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgcmlnaHQ6IDBweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private routes:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  submitLogout(){\r\n    localStorage.removeItem('token');\r\n    this.routes.navigate(['home/agent-login']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/home/auth.service';\r\nimport { AgentserviceService } from 'src/app/admin/agentservice.service';\r\nimport { DataService } from 'src/app/home/data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n \r\n\r\n  messages: any[] = [];\r\n  subscription: Subscription;\r\n  myData ={ }\r\n  first_name;\r\n  last_name;\r\n  email;\r\n  phone;\r\n  \r\n  constructor( private _agentService: AgentserviceService, private dataService: DataService) {\r\n\r\n    this.subscription = this.dataService.getMessage().subscribe(message => {\r\n      if (message) {\r\n      this.messages.push(message);\r\n      console.log(message);\r\n      console.log(\"Message\",message.text.email);\r\n      this.email = message.text.email;\r\n      this.first_name = message.text.first_name;\r\n      this.last_name = message.text.last_name;\r\n      this.phone = message.text.phone;\r\n  \r\n\r\n      } else {\r\n      // clear messages when empty message received\r\n      this.messages = [];\r\n      }\r\n      });\r\n\r\n\r\n\r\n   }\r\n  \r\n\r\n  ngOnInit() {\r\n    // this._agentService.getAgentDetail()\r\n    //   .subscribe(\r\n    //     res => {\r\n    //       this.myData = res.message\r\n    //       console.log(this.myData);\r\n    //     },\r\n    //     error => console.error(error)\r\n    //   );\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminNavService {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _isSideNavOpen = new BehaviorSubject<boolean>(true);\r\n\r\n  get isSideNavOpen() {\r\n    return this._isSideNavOpen.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  openNav() {\r\n    // document.getElementById('mySidenav').style.width = '250px';\r\n    this._isSideNavOpen.next(true);\r\n  }\r\n\r\n  closeNav() {\r\n    // document.getElementById('mySidenav').style.width = '0';\r\n    this._isSideNavOpen.next(false);\r\n  }\r\n}\r\n","export default \".sidenav {\\r\\n    height: 100%;\\r\\n    width: 0;\\r\\n    position: fixed;\\r\\n    z-index: 1;\\r\\n    top: 90px;\\r\\n    left: 0;\\r\\n    background-color: #adb5bd;\\r\\n    overflow-x: hidden;\\r\\n    transition: 0.5s;\\r\\n    padding-top: 60px;\\r\\n}\\r\\n\\r\\n.sidenav a {\\r\\n    padding: 1px 1px 1px 32px;\\r\\n    text-decoration: none;\\r\\n    font-size: 25px;\\r\\n    color: black;\\r\\n    display: block;\\r\\n    transition: 0.3s;\\r\\n    font-family: 'Gayathri', sans-serif;\\r\\n}\\r\\n\\r\\n.sidenav a:hover {\\r\\n    color: #f1f1f1;\\r\\n    background: #383d41;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.sidenav .closebtn {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 25px;\\r\\n    font-size: 36px;\\r\\n    margin-left: 50px;\\r\\n}\\r\\n\\r\\n@media screen and (max-height: 450px) {\\r\\n    .sidenav {\\r\\n        padding-top: 15px;\\r\\n    }\\r\\n    .sidenav a {\\r\\n        font-size: 18px;\\r\\n    }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvYWdlbnQvc2lkZS1uYXYvc2lkZS1uYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixRQUFRO0lBQ1IsZUFBZTtJQUNmLFVBQVU7SUFDVixTQUFTO0lBQ1QsT0FBTztJQUNQLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLFlBQVk7SUFDWixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLG1DQUFtQztBQUN2Qzs7QUFFQTtJQUNJLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sV0FBVztJQUNYLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSTtRQUNJLGlCQUFpQjtJQUNyQjtJQUNBO1FBQ0ksZUFBZTtJQUNuQjtBQUNKIiwiZmlsZSI6Ii4uL3NyYy9hcHAvYWdlbnQvc2lkZS1uYXYvc2lkZS1uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAwO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIHRvcDogOTBweDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWRiNWJkO1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgdHJhbnNpdGlvbjogMC41cztcclxuICAgIHBhZGRpbmctdG9wOiA2MHB4O1xyXG59XHJcblxyXG4uc2lkZW5hdiBhIHtcclxuICAgIHBhZGRpbmc6IDFweCAxcHggMXB4IDMycHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LWZhbWlseTogJ0dheWF0aHJpJywgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuLnNpZGVuYXYgYTpob3ZlciB7XHJcbiAgICBjb2xvcjogI2YxZjFmMTtcclxuICAgIGJhY2tncm91bmQ6ICMzODNkNDE7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4uc2lkZW5hdiAuY2xvc2VidG4ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDI1cHg7XHJcbiAgICBmb250LXNpemU6IDM2cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNTBweDtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6IDQ1MHB4KSB7XHJcbiAgICAuc2lkZW5hdiB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgICB9XHJcbiAgICAuc2lkZW5hdiBhIHtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICB9XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {AdminNavService} from '../side-nav/admin-nav.service';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n  isOpen: boolean;\r\n\r\n  constructor(private adminService: AdminNavService) {\r\n    this.adminService.isSideNavOpen.subscribe(\r\n      (isSideNavOpen: boolean) => {\r\n        return this.isOpen = isSideNavOpen;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeNav() {\r\n    this.adminService.closeNav();\r\n  }\r\n  openNav() {\r\n    this.adminService.openNav();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2FnZW50L3ZpZXctdXNlci92aWV3LXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AgentserviceService } from '../agentservice.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, Validators, FormArray, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-view-user',\r\n  templateUrl: './view-user.component.html',\r\n  styleUrls: ['./view-user.component.css']\r\n})\r\nexport class ViewUserComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _agentService: AgentserviceService, private routes :Router,private activateRouter : ActivatedRoute) { }\r\nmyData = [];\r\n\r\nngOnInit() {\r\nthis.activateRouter.params.subscribe(data=>{\r\n// console.log(data.id)\r\nthis._agentService.view_User(data.id)\r\n.subscribe(\r\n(res:any) => this.myData = res,\r\nerror => console.error(error)\r\n);\r\n});\r\n\r\n\r\n\r\n}\r\n\r\nbackToDash(){\r\n\r\n  this.routes.navigate(['agent/customer-list']);}\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}